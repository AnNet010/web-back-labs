from flask import Flask, url_for, request, redirect, abort, render_template
import datetime
from lab1 import lab1

app = Flask(__name__)
app.register_blueprint(lab1)

@app.route("/")
@app.route("/index")
def index():
    return '''
<!doctype html>
<html>
    <head>
        <title>–ù–ì–¢–£, –§–ë, –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã</title>
    </head>
    <body>
        <header>
            <h1>–ù–ì–¢–£, –§–ë, WEB-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —á–∞—Å—Ç—å 2. –°–ø–∏—Å–æ–∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö</h1>
        </header>
        <main>
            <nav>
                <ul>
                    <li><a href="/lab1">–ü–µ—Ä–≤–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è</a></li>
                    <li><a href="/lab2">–í—Ç–æ—Ä–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è</a></li>
                </ul>
            </nav>
        </main>
        <footer>
            <p>–ë–æ–±—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –ê–Ω—Ç–æ–Ω–æ–≤–Ω–∞, –§–ë–ò-31, 3 –∫—É—Ä—Å, 2025</p>
        </footer>
    </body>
</html>
'''


log_404 = []

@app.errorhandler(404)
def not_found(err):
    css_path = url_for("static", filename="error404.css")
    cat1 = url_for("static", filename="errorcat1.png")
    cat2 = url_for("static", filename="errorcat2.png")
    error_img = url_for("static", filename="error404.png")

    ip = request.remote_addr
    url = request.url
    now = datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S")

    entry = {"time": now, "ip": ip, "url": url}
    log_404.append(entry)

    log_html = """
    <table style="width:100%; border-collapse:collapse; margin-top:15px; font-family:monospace;">
        <tr style="background:#f0f0f0;">
            <th style="border:1px solid #ccc; padding:5px;">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</th>
            <th style="border:1px solid #ccc; padding:5px;">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (IP)</th>
            <th style="border:1px solid #ccc; padding:5px;">–ê–¥—Ä–µ—Å</th>
        </tr>
    """
    for record in reversed(log_404):
        log_html += f"""
        <tr>
            <td style="border:1px solid #ccc; padding:5px;">{record['time']}</td>
            <td style="border:1px solid #ccc; padding:5px;">{record['ip']}</td>
            <td style="border:1px solid #ccc; padding:5px;">{record['url']}</td>
        </tr>
        """
    log_html += "</table>"

    return f'''
<!doctype html>
<html>
    <head>
        <title>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</title>
        <link rel="stylesheet" type="text/css" href="{css_path}">
    </head>
    <body>
        <div class="container">
            <img src="{cat1}" class="side-img">
            <img src="{error_img}" class="center-img">
            <img src="{cat2}" class="side-img">
        </div>
        <h1>–£–ø—Å! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å...</h1>
        <p>–ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –∫–æ—Ç–∏–∫–∏ —É–∂–µ –∏—â—É—Ç –µ—ë üêæ</p>
        <a href="/">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>

        <div style="margin-top:80px;">
            <h2>–ñ—É—Ä–Ω–∞–ª –æ–±—Ä–∞—â–µ–Ω–∏–π:</h2>
            {log_html}
        </div>
    </body>
</html>
''', 404


@app.route("/error/400")
def error_400():
    return "400 Bad Request - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å", 400

@app.route("/error/401")
def error_401():
    return "401 Unauthorized - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω", 401

@app.route("/error/402")
def error_402():
    return "402 Payment Required - –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –æ–ø–ª–∞—Ç–∞", 402

@app.route("/error/403")
def error_403():
    return "403 Forbidden - –∑–∞–ø—Ä–µ—â–µ–Ω–æ (–Ω–µ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω)", 403

@app.route("/error/405")
def error_405():
    return "405 Method Not Allowed - –º–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è", 405

@app.route("/error/418")
def error_418():
    return "418 I'm a teapot - —è ‚Äî —á–∞–π–Ω–∏–∫", 418

@app.route("/error/500")
def error_500():
    return 10 / 0

@app.errorhandler(500)
def server_error(err):
    return '''
<!doctype html>
<html>
    <head>
        <title>500 - –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #fff3f3;
                text-align: center;
                padding: 50px;
            }
            h1 {
                color: #cc0000;
                font-size: 40px;
            }
            p {
                font-size: 20px;
            }
            a {
                display: inline-block;
                margin-top: 20px;
                padding: 10px 20px;
                background: #ffcccc;
                border-radius: 8px;
                text-decoration: none;
                color: black;
                font-weight: bold;
            }
            a:hover {
                background: #ff9999;
            }
        </style>
    </head>
    <body>
        <h1>500 ‚Äî –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1>
        <p>–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòø</p>
        <p>–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.</p>
        <a href="/">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
    </body>
</html>
''', 500

@app.route('/lab2/a')
def a():
    return '–±–µ–∑ —Å–ª—ç—à–∞'

@app.route('/lab2/a/')
def a2():
    return '—Å–æ —Å–ª—ç—à–µ–º'

flower_list = [
    {'name': '—Ä–æ–∑–∞', 'price': 300},
    {'name': '—Ç—é–ª—å–ø–∞–Ω', 'price': 310},
    {'name': '–Ω–µ–∑–∞–±—É–¥–∫–∞', 'price': 320},
    {'name': '—Ä–æ–º–∞—à–∫–∞', 'price': 330},
    {'name': '–≥–µ–æ—Ä–≥–∏–Ω', 'price': 300},
    {'name': '–≥–ª–∞–¥–∏–æ–ª—É—Å', 'price': 310},
]

@app.route('/lab2/add_flower/<name>/<int:price>')
def add_flower(name, price):
    flower_list.append({'name': name, 'price': price})
    return render_template(
        'add.html',
        name=name,
        price=price,
        count=len(flower_list),
        flowers=flower_list
    )

@app.route('/lab2/add_flower/')
def add_flower_no_name():
    return render_template('noName.html'), 400


@app.route('/lab2/flowers/')
def show_flowers():
    return render_template('list.html', flowers=flower_list, count=len(flower_list))


@app.route('/lab2/flowers/<int:flower_id>')
def show_flower(flower_id):
    if 0 <= flower_id < len(flower_list):
        flower = flower_list[flower_id]
        return render_template('flower.html', flower=flower, flower_id=flower_id)
    else:
        return render_template('flower.html', flower=None, flower_id=flower_id), 404

@app.route('/lab2/clear/')
def clear():
    flower_list.clear()
    return render_template('clear.html', count=len(flower_list))

@app.route('/lab2/flowers/delete/<int:flower_id>')
def delete_flower(flower_id):
    if 0 <= flower_id < len(flower_list):
        flower_list.pop(flower_id)
        return redirect(url_for('show_flowers'))
    else:
        abort(404)

@app.route('/lab2/add_flower_form')
def add_flower_form():
    name = request.args.get('name')
    price = request.args.get('price', type=int)

    if not name or price is None:
        return render_template('noName.html'), 400

    flower_list.append({'name': name, 'price': price})
    return redirect(url_for('show_flowers'))

@app.route('/lab2/example')
def example():
    name = '–ê–Ω–Ω–∞ –ë–æ–±—Ä–æ–≤–∞'
    lab_number = 2
    group = '–§–ë–ò-31'
    course = '3 –∫—É—Ä—Å'
    fruits = [
        {'name': '—è–±–ª–æ–∫–∏', 'price': 100},
        {'name': '–≥—Ä—É—à–∏', 'price': 120},
        {'name': '–∞–ø–µ–ª—å—Å–∏–Ω—ã', 'price': 80},
        {'name': '–º–∞–Ω–¥–∞—Ä–∏–Ω—ã', 'price': 95},
        {'name': '–º–∞–Ω–≥–æ', 'price': 321}
    ]
    return render_template('example.html', 
                            name=name, lab_number=lab_number, group=group,
                            course=course, fruits=fruits)

@app.route('/lab2/')
def lab2():
    return render_template('lab2.html')

@app.route('/lab2/filters')
def filters():
    phrase = "–û <b>—Å–∫–æ–ª—å–∫–æ</b> <u>–Ω–∞–º</u> <i>–æ—Ç–∫—Ä—ã—Ç–∏–π</i> —á—É–¥–Ω—ã—Ö..."
    return render_template('filter.html', phrase = phrase)


@app.route('/lab2/calc/<int:a>/<int:b>')
def calc(a, b):
    division = a / b if b != 0 else None 
    return render_template(
        'calc.html',
        a=a,
        b=b,
        sum=a+b,
        sub=a-b,
        mul=a*b,
        div=division,
        pow=a**b
    )

@app.route('/lab2/calc/')
def calc_one():
    return redirect(url_for('calc', a=1, b=1))

@app.route('/lab2/calc/<int:a>')
def calc_single(a):
    return redirect(url_for('calc', a=a, b=1))

@app.route('/lab2/books/')
def show_books():
    books = [
        {"title": "–í–æ–π–Ω–∞ –∏ –º–∏—Ä", "author": "–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π", "genre": "–†–æ–º–∞–Ω", "pages": 1225},
        {"title": "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", "author": "–§—ë–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", "genre": "–†–æ–º–∞–Ω", "pages": 671},
        {"title": "–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "author": "–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤", "genre": "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "pages": 470},
        {"title": "–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞", "author": "–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π", "genre": "–†–æ–º–∞–Ω", "pages": 864},
        {"title": "–í–∏—à–Ω–µ–≤—ã–π —Å–∞–¥", "author": "–ê–Ω—Ç–æ–Ω –ß–µ—Ö–æ–≤", "genre": "–î—Ä–∞–º–∞", "pages": 96},
        {"title": "–ì–æ—Ä–µ –æ—Ç —É–º–∞", "author": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–±–æ–µ–¥–æ–≤", "genre": "–ö–æ–º–µ–¥–∏—è", "pages": 256},
        {"title": "451 –≥—Ä–∞–¥—É—Å –ø–æ –§–∞—Ä–µ–Ω–≥–µ–π—Ç—É", "author": "–†—ç–π –ë—Ä—ç–¥–±–µ—Ä–∏", "genre": "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "pages": 249},
        {"title": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å", "author": "–î–∂–æ–∞–Ω –†–æ—É–ª–∏–Ω–≥", "genre": "–§—ç–Ω—Ç–µ–∑–∏", "pages": 223},
        {"title": "–ì–∞–º–ª–µ—Ç", "author": "–£–∏–ª—å—è–º –®–µ–∫—Å–ø–∏—Ä", "genre": "–î—Ä–∞–º–∞", "pages": 224},
        {"title": "1984", "author": "–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª", "genre": "–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è", "pages": 328},
    ]
    return render_template('books.html', books=books)

@app.route('/lab2/cats/')
def cats():
    cats_list = [
        {"name": "–ë—Ä–∏—Ç–∞–Ω–µ—Ü", "img": "british.jpg", "desc": "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ —É–º–Ω—ã–π –∫–æ—Ç —Å –ø–ª—é—à–µ–≤–æ–π —à–µ—Ä—Å—Ç—å—é."},
        {"name": "–°—Ñ–∏–Ω–∫—Å", "img": "sphynx.jpg", "desc": "–ë–µ–∑ —à–µ—Ä—Å—Ç–∏, –Ω–æ –æ—á–µ–Ω—å –ª–∞—Å–∫–æ–≤—ã–π –∏ —Ç—ë–ø–ª—ã–π."},
        {"name": "–ú–µ–π–Ω-–∫—É–Ω", "img": "mainecoon.png", "desc": "–û–≥—Ä–æ–º–Ω—ã–π –∫–æ—Ç, –¥–æ–±—Ä—ã–π –≥–∏–≥–∞–Ω—Ç."},
        {"name": "–°–∏–∞–º—Å–∫–∏–π", "img": "siamese.jpg", "desc": "–ö—Ä–∞—Å–∏–≤—ã–π —Å —è—Ä–∫–æ-–≥–æ–ª—É–±—ã–º–∏ –≥–ª–∞–∑–∞–º–∏."},
        {"name": "–†—É—Å—Å–∫–∞—è –≥–æ–ª—É–±–∞—è", "img": "russianblue.jpeg", "desc": "–ò–∑—è—â–Ω–∞—è –ø–æ—Ä–æ–¥–∞ —Å —Å–µ—Ä–µ–±—Ä–∏—Å—Ç–æ–π —à–µ—Ä—Å—Ç—å—é."},
        {"name": "–ê–±–∏—Å—Å–∏–Ω—Å–∫–∞—è", "img": "abyssinian.jpg", "desc": "–ê–∫—Ç–∏–≤–Ω—ã–π –∏ –∏–≥—Ä–∏–≤—ã–π –æ—Ö–æ—Ç–Ω–∏–∫."},
        {"name": "–ë–µ–Ω–≥–∞–ª—å—Å–∫–∞—è", "img": "bengal.jpg", "desc": "–û—á–µ–Ω—å —ç–Ω–µ—Ä–≥–∏—á–Ω–∞—è, —Å –ø—è—Ç–Ω–∏—Å—Ç–æ–π —à–µ—Ä—Å—Ç—å—é –∫–∞–∫ —É –ª–µ–æ–ø–∞—Ä–¥–∞."},
        {"name": "–ü–µ—Ä—Å–∏–¥—Å–∫–∞—è", "img": "persian.jpg", "desc": "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –ø—É—à–∏—Å—Ç—ã–π, –ª—é–±–∏—Ç –¥–æ–º–∞—à–Ω–∏–π —É—é—Ç."},
        {"name": "–°–∏–±–∏—Ä—Å–∫–∞—è", "img": "siberian.jpg", "desc": "–ö—Ä—É–ø–Ω—ã–π –∏ –ø—É—à–∏—Å—Ç—ã–π, –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç —Ö–æ–ª–æ–¥."},
        {"name": "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ä–æ—Ç–∫–æ—à–µ—Ä—Å—Ç–Ω–∞—è", "img": "exotic.jpg", "desc": "–û—á–µ–Ω—å –ø–æ—Ö–æ–∂–∞ –Ω–∞ –ø–µ—Ä—Å–∞, –Ω–æ —Å –∫–æ—Ä–æ—Ç–∫–æ–π —à–µ—Ä—Å—Ç—å—é."},
        {"name": "–û—Ä–∏–µ–Ω—Ç–∞–ª—å–Ω–∞—è", "img": "oriental.jpg", "desc": "–•—É–¥–æ—â–∞–≤–æ–µ –∏ –≥—Ä–∞—Ü–∏–æ–∑–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ."},
        {"name": "–®–æ—Ç–ª–∞–Ω–¥—Å–∫–∞—è –≤–∏—Å–ª–æ—É—Ö–∞—è", "img": "scottish.jpg", "desc": "–£–º–Ω—ã–µ –∏ –º–∏–ª—ã–µ —Å –∑–∞–≥–Ω—É—Ç—ã–º–∏ —É—à–∫–∞–º–∏."},
        {"name": "–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –∫–æ—Ä–æ—Ç–∫–æ—à–µ—Ä—Å—Ç–Ω–∞—è", "img": "american.jpg", "desc": "–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–π –∏ –∑–¥–æ—Ä–æ–≤—ã–π –ø–∏—Ç–æ–º–µ—Ü."},
        {"name": "–¢—É—Ä–µ—Ü–∫–∞—è –∞–Ω–≥–æ—Ä–∞", "img": "angora.jpg", "desc": "–ò–∑—è—â–Ω–∞—è –±–µ–ª–æ—Å–Ω–µ–∂–Ω–∞—è –∫—Ä–∞—Å–∞–≤–∏—Ü–∞."},
        {"name": "–ë–∏—Ä–º–∞–Ω—Å–∫–∞—è", "img": "birman.jpg", "desc": "–î–æ–±—Ä—ã–π –∫–æ—Ç —Å –≥–æ–ª—É–±—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –∏ –±–µ–ª—ã–º–∏ –ª–∞–ø–∫–∞–º–∏."},
        {"name": "–ú–∞–Ω—á–∫–∏–Ω", "img": "munchkin.jpg", "desc": "–ó–∞–±–∞–≤–Ω—ã–µ –∫–æ—Ç—ã —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –ª–∞–ø–∫–∞–º–∏."},
        {"name": "–†—ç–≥–¥–æ–ª–ª", "img": "ragdoll.jpg", "desc": "–û—á–µ–Ω—å –ª–∞—Å–∫–æ–≤—ã–µ –∏ —Å–ø–æ–∫–æ–π–Ω—ã–µ."},
        {"name": "–¢–∞–π—Å–∫–∞—è", "img": "thai.jpg", "desc": "–ü–æ—Ö–æ–∂–∞ –Ω–∞ —Å–∏–∞–º—Å–∫—É—é, –Ω–æ –±–æ–ª–µ–µ –∫—Ä–µ–ø–∫–∞—è."},
        {"name": "–û—Ü–∏–∫–µ—Ç", "img": "ocicat.jpg", "desc": "–†–µ–¥–∫–∞—è –ø–æ—Ä–æ–¥–∞, –ø–æ—Ö–æ–∂–∞ –Ω–∞ –¥–∏–∫–æ–≥–æ –æ—Ü–µ–ª–æ—Ç–∞."},
        {"name": "–ö–æ—Ä–Ω–∏—à-—Ä–µ–∫—Å", "img": "cornish.jpg", "desc": "–ò–º–µ–µ—Ç –º—è–≥–∫—É—é –≤–æ–ª–Ω–∏—Å—Ç—É—é —à–µ—Ä—Å—Ç—å."}
    ]
    return render_template('cats.html', cats=cats_list)